name: Deployment - Production

on:
  push:
    branches:
      - main

env:
  DOCKERHUB_USERNAME: prefeiturario
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  DOCKERHUB_REPOSITORY: chatbot-webhooks
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
  GCR_SERVICE: ${{ secrets.GCR_SERVICE }}
  GCR_REGION: ${{ secrets.GCR_REGION }}

jobs:
  release-docker:
    name: Build - Release Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker Auth
        id: docker-auth
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPOSITORY }}:${{ github.sha }}
            ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPOSITORY }}:latest
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
          build-args: |
            BUILDKIT_INLINE_CACHE=1

  deploy-prod:
    needs: release-docker
    name: Deploy - Production

    permissions:
      id-token: write
      contents: read

    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ steps.deploy.outputs.url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ env.GCP_SA_KEY }}'

      - name: Deploy to Google Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ env.GCR_SERVICE }}
          region: ${{ env.GCR_REGION }}
          image: docker.io/${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPOSITORY }}:${{ github.sha }}
          flags: '--add-cloudsql-instances=datario:us-central1:postgres-side --port=80 --allow-unauthenticated'
          secrets: |
            ENVIRONMENT=CHATBOT_WEBHOOKS_PROD_ENVIRONMENT:latest
            INFISICAL_ADDRESS=CHATBOT_WEBHOOKS_PROD_INFISICAL_ADDRESS:latest
            INFISICAL_TOKEN=CHATBOT_WEBHOOKS_PROD_INFISICAL_TOKEN:latest
